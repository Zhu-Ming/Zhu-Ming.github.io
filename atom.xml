<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A BUG|A CHANCE</title>
  <icon>https://www.gravatar.com/avatar/f63e2932402ca598fd6af3eed9f33d56</icon>
  <subtitle>ZM</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zm163.github.io/"/>
  <updated>2020-05-13T16:16:05.116Z</updated>
  <id>http://zm163.github.io/</id>
  
  <author>
    <name>little ZM</name>
    <email>19850830198@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode-9</title>
    <link href="http://zm163.github.io/2020/05/13/LeetCode-9/"/>
    <id>http://zm163.github.io/2020/05/13/LeetCode-9/</id>
    <published>2020-05-13T12:32:27.000Z</published>
    <updated>2020-05-13T16:16:05.116Z</updated>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;来源：力扣（LeetCode）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;链接：https:&amp;#x2F;&amp;#x2F;leetcode-cn.com&amp;#x2F;problems&amp;#x2F;zigzag-conversion&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;回文数&quot;&gt;&lt;a href=&quot;#回文数&quot; class=&quot;headerlink&quot; title=&quot;回文数&quot;&gt;&lt;/a&gt;回文数&lt;/h1&gt;
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
      <category term="LeetCode-简单" scheme="http://zm163.github.io/categories/LeetCode-%E7%AE%80%E5%8D%95/"/>
    
      <category term="数学" scheme="http://zm163.github.io/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-8</title>
    <link href="http://zm163.github.io/2020/05/13/LeetCode-8/"/>
    <id>http://zm163.github.io/2020/05/13/LeetCode-8/</id>
    <published>2020-05-13T12:32:22.000Z</published>
    <updated>2020-05-13T15:03:23.339Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
      <category term="LeetCode-中等" scheme="http://zm163.github.io/categories/LeetCode-%E4%B8%AD%E7%AD%89/"/>
    
      <category term="字符串" scheme="http://zm163.github.io/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-7</title>
    <link href="http://zm163.github.io/2020/05/13/LeetCode-7/"/>
    <id>http://zm163.github.io/2020/05/13/LeetCode-7/</id>
    <published>2020-05-13T12:32:15.000Z</published>
    <updated>2020-05-13T13:13:07.181Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
      <category term="LeetCode-简单" scheme="http://zm163.github.io/categories/LeetCode-%E7%AE%80%E5%8D%95/"/>
    
      <category term="数学" scheme="http://zm163.github.io/categories/%E6%95%B0%E5%AD%A6/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-6</title>
    <link href="http://zm163.github.io/2020/05/10/LeetCode-6/"/>
    <id>http://zm163.github.io/2020/05/10/LeetCode-6/</id>
    <published>2020-05-10T12:44:30.000Z</published>
    <updated>2020-05-13T12:31:06.267Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
      <category term="LeetCode-中等" scheme="http://zm163.github.io/categories/LeetCode-%E4%B8%AD%E7%AD%89/"/>
    
      <category term="算法类型" scheme="http://zm163.github.io/categories/%E7%AE%97%E6%B3%95%E7%B1%BB%E5%9E%8B/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-5</title>
    <link href="http://zm163.github.io/2020/05/10/LeetCode-5/"/>
    <id>http://zm163.github.io/2020/05/10/LeetCode-5/</id>
    <published>2020-05-10T12:44:25.000Z</published>
    <updated>2020-05-13T12:20:58.714Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;#最长回文子串&lt;br&gt;##题目&lt;br&gt;    给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。&lt;br&gt;##示例&lt;br&gt;    ###示例 1&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;输入: &amp;quot;babad&amp;quot;
输出:
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
      <category term="LeetCode-中等" scheme="http://zm163.github.io/categories/LeetCode-%E4%B8%AD%E7%AD%89/"/>
    
      <category term="字符串" scheme="http://zm163.github.io/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-4</title>
    <link href="http://zm163.github.io/2020/05/10/LeetCode-4/"/>
    <id>http://zm163.github.io/2020/05/10/LeetCode-4/</id>
    <published>2020-05-10T12:43:52.000Z</published>
    <updated>2020-05-10T13:02:38.380Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;###4. 寻找两个正序数组的中位数&lt;br&gt;##题目：&lt;br&gt;    给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;请你找出这两个正序数组的中位数，并且要求算法的时间复杂度为 O(log(m +
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
      <category term="LeetCode-困难" scheme="http://zm163.github.io/categories/LeetCode-%E5%9B%B0%E9%9A%BE/"/>
    
      <category term="数组" scheme="http://zm163.github.io/categories/%E6%95%B0%E7%BB%84/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://zm163.github.io/2020/05/03/hello-world/"/>
    <id>http://zm163.github.io/2020/05/03/hello-world/</id>
    <published>2020-05-03T04:54:07.115Z</published>
    <updated>2020-05-13T15:43:41.299Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>GIT移动文件导致任务管理器找不到服务</title>
    <link href="http://zm163.github.io/2019/12/11/GIT%E7%A7%BB%E5%8A%A8%E6%96%87%E4%BB%B6%E5%AF%BC%E8%87%B4%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%E6%89%BE%E4%B8%8D%E5%88%B0%E6%9C%8D%E5%8A%A1/"/>
    <id>http://zm163.github.io/2019/12/11/GIT%E7%A7%BB%E5%8A%A8%E6%96%87%E4%BB%B6%E5%AF%BC%E8%87%B4%E4%BB%BB%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%E6%89%BE%E4%B8%8D%E5%88%B0%E6%9C%8D%E5%8A%A1/</id>
    <published>2019-12-11T09:45:54.000Z</published>
    <updated>2020-05-04T13:15:09.777Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;移动GIT默认文件夹导致任务管理其找不到对应的服务。&lt;br&gt;1打开cmd,输入regedit&lt;/p&gt;
&lt;p&gt;2找到HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory&lt;br&gt;\background\shell\git_gui\comma
        
      
    
    </summary>
    
    
      <category term="Git" scheme="http://zm163.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="http://zm163.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>串</title>
    <link href="http://zm163.github.io/2019/11/21/%E4%B8%B2/"/>
    <id>http://zm163.github.io/2019/11/21/%E4%B8%B2/</id>
    <published>2019-11-21T14:21:22.000Z</published>
    <updated>2020-05-04T13:20:25.644Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;注意此处的串的实现中的模式匹配，并不是最优解法（使用KMP算法）。建议直接放入头文件。此外，但凡程序中涉及的位置皆为位序（从1开始），在某些部分，如果使用坐标作为参数，可能会产生错误，不过基本上这些错误，程序中都有所应对。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ifndef
        
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://zm163.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="C语言" scheme="http://zm163.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据结构" scheme="http://zm163.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="C语言" scheme="http://zm163.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>双链表</title>
    <link href="http://zm163.github.io/2019/11/20/%E5%8F%8C%E9%93%BE%E8%A1%A8/"/>
    <id>http://zm163.github.io/2019/11/20/%E5%8F%8C%E9%93%BE%E8%A1%A8/</id>
    <published>2019-11-20T12:16:54.000Z</published>
    <updated>2020-05-04T13:20:51.721Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在单链表的基础上添加了一个指向前面结点的指针。&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdlib.h&amp;gt;
#include&amp;lt;stdio.h&amp;gt;
#define ElementType char
typedef
        
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://zm163.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="C语言" scheme="http://zm163.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据结构" scheme="http://zm163.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="C语言" scheme="http://zm163.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>单链表</title>
    <link href="http://zm163.github.io/2019/11/20/%E5%8D%95%E9%93%BE%E8%A1%A8/"/>
    <id>http://zm163.github.io/2019/11/20/%E5%8D%95%E9%93%BE%E8%A1%A8/</id>
    <published>2019-11-20T12:16:32.000Z</published>
    <updated>2020-05-04T13:20:41.169Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;单链表：顺序表的链表实现。&lt;/p&gt;
&lt;p&gt;建议放入头文件。&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#include&amp;lt;stdio.h&amp;gt;
#include&amp;lt;stdlib.h&amp;gt;
#define ElementType
        
      
    
    </summary>
    
    
      <category term="数据结构" scheme="http://zm163.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="C语言" scheme="http://zm163.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/C%E8%AF%AD%E8%A8%80/"/>
    
    
      <category term="数据结构" scheme="http://zm163.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="C语言" scheme="http://zm163.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-3</title>
    <link href="http://zm163.github.io/2019/10/20/LeetCode-3/"/>
    <id>http://zm163.github.io/2019/10/20/LeetCode-3/</id>
    <published>2019-10-20T01:30:52.000Z</published>
    <updated>2020-05-10T10:14:36.718Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;实现语言：Java&lt;/p&gt;
&lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;给定一个字符串，找出不含重复字符的最长字串的长度。&lt;/p&gt;
&lt;p&gt;实例：&lt;/p&gt;
&lt;p&gt;给定字符串“abcabcbb”,没有重复字符的最长字串是“abc”，那么长度就是3.&lt;/p&gt;
&lt;p&gt;给定字符串“bbbbb”,最长
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-2</title>
    <link href="http://zm163.github.io/2019/10/19/LeetCode-2/"/>
    <id>http://zm163.github.io/2019/10/19/LeetCode-2/</id>
    <published>2019-10-19T13:43:46.000Z</published>
    <updated>2020-05-10T10:14:55.796Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;题目描述：&lt;/p&gt;
&lt;p&gt;给定两个非空链表表示两个非负整数，位数按照逆序存储他们的每个节点只存储单个数字，将两数相加&lt;br&gt;返回一个新的链表。&lt;br&gt;你可以假设除了数字0外，这两个数字都不以0开头.{即数字不为（002）转化为输入就是（2-&amp;gt;0-&amp;gt;0）也告诉我们
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-1</title>
    <link href="http://zm163.github.io/2019/10/19/LeetCode-1/"/>
    <id>http://zm163.github.io/2019/10/19/LeetCode-1/</id>
    <published>2019-10-19T13:43:00.000Z</published>
    <updated>2020-05-10T10:19:48.043Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;语言：Java&lt;/p&gt;
&lt;p&gt;题目描述：&lt;br&gt;    给定一个数组，找出其中何为目标值的两个数。（你可以假设每种输入只有一种答案，且同样的元素不能被重复利用）&lt;br&gt;    实例：&lt;br&gt;     给定nums=[2,7,11,15],target=9;&lt;br&gt;    
        
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="http://zm163.github.io/categories/LeetCode/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="Java" scheme="http://zm163.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>PTA-Basic-1075</title>
    <link href="http://zm163.github.io/2019/10/16/PTA-Basic-1075/"/>
    <id>http://zm163.github.io/2019/10/16/PTA-Basic-1075/</id>
    <published>2019-10-16T15:23:44.000Z</published>
    <updated>2020-05-04T12:59:42.861Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;给定一个单链表，请编写程序将链表元素进行分类排列，使得所有负值元素都排在非负值元素的前面，而 [0, K] 区间内的元素都排在大于 K 的元素前面。但每一类内部元素的顺序是不能改变的。例如：给定链表为
        
      
    
    </summary>
    
    
      <category term="PTA" scheme="http://zm163.github.io/categories/PTA/"/>
    
      <category term="Basic" scheme="http://zm163.github.io/categories/PTA/Basic/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c语言" scheme="http://zm163.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>PTA-Basic-1035</title>
    <link href="http://zm163.github.io/2019/10/16/PTA-Basic-1035/"/>
    <id>http://zm163.github.io/2019/10/16/PTA-Basic-1035/</id>
    <published>2019-10-16T15:23:22.000Z</published>
    <updated>2020-05-04T12:56:25.367Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;根据维基百科的定义：&lt;/p&gt;
&lt;p&gt;插入排序是迭代算法，逐一获得输入数据，逐步产生有序的输出序列。每步迭代中，算法从输入序列中取出一元素，将之插入有序序列中正确的位置。如此迭代直到全部元素有序。&lt;/p&gt;
&lt;p&gt;归并排序进行如下迭代操作：首先将原始序列看
        
      
    
    </summary>
    
    
      <category term="PTA" scheme="http://zm163.github.io/categories/PTA/"/>
    
      <category term="Basic" scheme="http://zm163.github.io/categories/PTA/Basic/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c语言" scheme="http://zm163.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>PTA-Basic-1025</title>
    <link href="http://zm163.github.io/2019/10/16/PTA-Basic-1025/"/>
    <id>http://zm163.github.io/2019/10/16/PTA-Basic-1025/</id>
    <published>2019-10-16T15:23:01.000Z</published>
    <updated>2020-05-04T10:51:30.203Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;给定一个常数 K 以及一个单链表 L，请编写程序将 L 中每 K 个结点反转。例如：给定 L 为 1→2→3→4→5→6，K 为 3，则输出应该为 3→2→1→6→5→4；如果 K 为 4，则输出应该为 4→3→2→1→5→6，即最后不到 K
        
      
    
    </summary>
    
    
    
      <category term="-PTA-Basic" scheme="http://zm163.github.io/tags/PTA-Basic/"/>
    
  </entry>
  
  <entry>
    <title>PTA-Basic-1095</title>
    <link href="http://zm163.github.io/2019/10/16/PTA-Basic-1095/"/>
    <id>http://zm163.github.io/2019/10/16/PTA-Basic-1095/</id>
    <published>2019-10-16T13:30:26.000Z</published>
    <updated>2020-05-04T13:00:12.052Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;题目：&lt;/p&gt;
&lt;p&gt;PAT 准考证号由 4 部分组成：&lt;/p&gt;
&lt;p&gt;第 1 位是级别，即 T 代表顶级；A 代表甲级；B 代表乙级；&lt;br&gt;第 2&lt;del&gt;4 位是考场编号，范围从 101 到 999；&lt;br&gt;第 5&lt;/del&gt;10
        
      
    
    </summary>
    
    
      <category term="PTA" scheme="http://zm163.github.io/categories/PTA/"/>
    
      <category term="Basic" scheme="http://zm163.github.io/categories/PTA/Basic/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c语言" scheme="http://zm163.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>PTA-Basic-1094</title>
    <link href="http://zm163.github.io/2019/10/16/PTA-Basic-1094/"/>
    <id>http://zm163.github.io/2019/10/16/PTA-Basic-1094/</id>
    <published>2019-10-16T13:30:22.000Z</published>
    <updated>2020-05-04T12:37:35.510Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;###题目描述&lt;/p&gt;
&lt;p&gt;2004 年 7 月，谷歌在硅谷的 101 号公路边竖立了一块巨大的广告牌（如下图）用于招聘。内容超级简单，就是一个以 .com 结尾的网址，而前面的网址是一个 10 位素数，这个素数是自然常数 e 中最早出现的 10
        
      
    
    </summary>
    
    
      <category term="PTA" scheme="http://zm163.github.io/categories/PTA/"/>
    
      <category term="Basic" scheme="http://zm163.github.io/categories/PTA/Basic/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c语言" scheme="http://zm163.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>PTA-Basic-1093</title>
    <link href="http://zm163.github.io/2019/10/16/PTA-Basic-1093/"/>
    <id>http://zm163.github.io/2019/10/16/PTA-Basic-1093/</id>
    <published>2019-10-16T13:30:17.000Z</published>
    <updated>2020-05-04T13:00:23.828Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;题目：&lt;br&gt;给定两个字符串 A 和 B，本题要求你输出 A+B，即两个字符串的并集。要求先输出 A，再输出 B，但重复的字符必须被剔除。&lt;/p&gt;
&lt;p&gt;输入格式：&lt;br&gt;输入在两行中分别给出 A 和 B，均为长度不超过 10&lt;br&gt;​6&lt;br&gt;​​ 的、由可见
        
      
    
    </summary>
    
    
      <category term="PTA" scheme="http://zm163.github.io/categories/PTA/"/>
    
      <category term="Basic" scheme="http://zm163.github.io/categories/PTA/Basic/"/>
    
    
      <category term="算法" scheme="http://zm163.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="c语言" scheme="http://zm163.github.io/tags/c%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
</feed>
